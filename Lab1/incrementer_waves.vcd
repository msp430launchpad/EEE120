$date
	Wed Aug 25 16:53:52 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module incrementer_top $end
$scope module incrementer $end
$var wire 4 ! a [3:0] $end
$var wire 1 " inc $end
$var wire 4 # y [3:0] $end
$var wire 1 $ s9 $end
$var wire 1 % s8 $end
$var wire 1 & s7 $end
$var wire 1 ' s6 $end
$var wire 1 ( s5 $end
$var wire 1 ) s4 $end
$var wire 1 * s3 $end
$var wire 1 + s2 $end
$var wire 1 , s10 $end
$var wire 1 - s1 $end
$var wire 1 . s0 $end
$var wire 1 / cry $end
$scope module half_adder_i0 $end
$var wire 1 $ a $end
$var wire 1 " b $end
$var wire 1 & cry $end
$var wire 1 , sum $end
$upscope $end
$scope module half_adder_i1 $end
$var wire 1 ' a $end
$var wire 1 & b $end
$var wire 1 ) cry $end
$var wire 1 % sum $end
$upscope $end
$scope module half_adder_i2 $end
$var wire 1 * a $end
$var wire 1 ) b $end
$var wire 1 - cry $end
$var wire 1 ( sum $end
$upscope $end
$scope module half_adder_i3 $end
$var wire 1 . a $end
$var wire 1 - b $end
$var wire 1 / cry $end
$var wire 1 + sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0/
0.
0-
1,
0+
0*
0)
0(
0'
0&
0%
0$
b1 #
1"
b0 !
$end
#10
1%
b10 #
0,
1&
1$
b1 !
#20
b11 #
1,
0&
1'
0$
b10 !
#30
1(
0%
1)
b100 #
0,
1&
1$
b11 !
#40
0)
b101 #
1,
0&
1*
0'
0$
b100 !
#50
1%
b110 #
0,
1&
1$
b101 !
#60
b111 #
1,
0&
1'
0$
b110 !
#70
1+
0(
1-
0%
1)
b1000 #
0,
1&
1$
b111 !
#80
0-
0)
b1001 #
1,
0&
1.
0*
0'
0$
b1000 !
#90
1%
b1010 #
0,
1&
1$
b1001 !
#100
b1011 #
1,
0&
1'
0$
b1010 !
#110
1(
0%
1)
b1100 #
0,
1&
1$
b1011 !
#120
0)
b1101 #
1,
0&
1*
0'
0$
b1100 !
#130
1%
b1110 #
0,
1&
1$
b1101 !
#140
b1111 #
1,
0&
1'
0$
b1110 !
#150
0+
1/
0(
1-
0%
1)
b0 #
0,
1&
1$
b1111 !
#160
0/
0-
0)
0.
0*
0'
0$
b0 #
0,
0&
b0 !
0"
#170
b1 #
1,
1$
b1 !
#180
1%
b10 #
0,
1'
0$
b10 !
#190
