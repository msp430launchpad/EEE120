/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

module full_adder (
  input a,
  input b,
  input cin,
  output cout,
  output sum
);
  assign cout = ((cin & a) | (cin & b) | (b & a));
  assign sum = (a ^ b ^ cin);
endmodule

module four_bit_adder (
  input cin,
  input [3:0] a,
  input [3:0] b,
  output cout,
  output [3:0] y,
  output overfl
);
  wire cout_temp;
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  wire s4;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  wire s9;
  wire s10;
  wire s11;
  wire s12;
  wire s13;
  wire s14;
  assign s1 = a[3];
  assign s4 = a[2];
  assign s8 = a[1];
  assign s12 = a[0];
  assign s2 = b[3];
  assign s5 = b[2];
  assign s9 = b[1];
  assign s13 = b[0];
  full_adder full_adder_i0 (
    .a( s12 ),
    .b( s13 ),
    .cin( cin ),
    .cout( s10 ),
    .sum( s14 )
  );
  full_adder full_adder_i1 (
    .a( s8 ),
    .b( s9 ),
    .cin( s10 ),
    .cout( s6 ),
    .sum( s11 )
  );
  full_adder full_adder_i2 (
    .a( s4 ),
    .b( s5 ),
    .cin( s6 ),
    .cout( s0 ),
    .sum( s7 )
  );
  full_adder full_adder_i3 (
    .a( s1 ),
    .b( s2 ),
    .cin( s0 ),
    .cout( cout_temp ),
    .sum( s3 )
  );
  assign overfl = (cout_temp ^ s0);
  assign y[3] = s3;
  assign y[2] = s7;
  assign y[1] = s11;
  assign y[0] = s14;
  assign cout = cout_temp;
endmodule
